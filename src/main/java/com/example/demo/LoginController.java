package com.example.demo;

import java.util.Map;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class LoginController {

    private final Logger logger = LoggerFactory.getLogger(LoginController.class);

    @PostMapping(value = "/login", consumes = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Void> login(@RequestBody Map<String, String> loginRequest) {
        return doLogin(loginRequest.getOrDefault("username", null), loginRequest.getOrDefault("password", null));
    }

    @GetMapping(value = "/login")
    public ResponseEntity<Void> login(@RequestParam(name = "username", required = false) String username, @RequestParam(name = "password", required = false) String password) {
        return doLogin(username, password);
    }

    private ResponseEntity<Void> doLogin(String username, String password) {
        if (username == null || password == null) {
            logger.debug("Unable to process login request. Missing credentials.");
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();
        } else if (username.equals("admin") && password.equals("monkey123")) {
            logger.debug("Login successful.");
            return ResponseEntity.accepted().build();
        } else {
            logger.warn("Cannot login user. [username={}]", username);
            return ResponseEntity.status(HttpStatus.FORBIDDEN).build();
        }
    }
}
